#include <iostream>
#include <bits\stdc++.h>

using namespace std;

vector<vector<int>> adj_list(1000000);
bool visited[100000];
int dist[100000];
map<pair<int,int>,int> cost;
vector<int> ans;
int mx=-1;
void bfs(int n){
	visited[n]=true;
	queue<int> q;
	q.push(n);
	while(!q.empty()){
		int front=q.front();
		q.pop();
		for(auto i:adj_list[front]){
			if(!visited[i]) q.push(i),visited[i]=true,dist[i]=dist[front]+cost[{front,i}];
		}
	}
}
void solve(int tt){
	int n;
	cin>>n;
	int a,b,c;
	for(int i=0;i<n-1;i++){
		cin>>a>>b>>c;
		cost[{a,b}]=c;
		cost[{b,a}]=c;
		adj_list[a].push_back(b);
		//adj_list[b].push_back(a);
	}
	for(int i=0;i<n;i++){
		memset(dist,0,sizeof(dist));
		memset(visited,false,sizeof(visited));
		mx=-1;
		bfs(i);

	}
	
	cout<<"Case "<<tt<<":\n";
	for(int i=1;i<=n;i++){
		cout<<ans[i]<<"\n";
	}
}
int main(){
	int t;
	cin>>t;
	for(int i=1;i<=t;i++){
		cost.clear();
		adj_list.clear();
		solve(i);
	}
	return 0;
}
